@startuml
'https://plantuml.com/class-diagram

class Coleccion {
    - titulo: String
    - descripcion: String
    - fuente : Fuente
    - criterios : List<CriterioPertenencia>
    + agregarCriterio(criterio: CriterioPertenencia)
    + importarHechos(): List<Hecho>
    + navegar(criterios: List<CriterioPertenencia>)
}

interface CriterioPertenencia {
    + cumple(hecho: Hecho)
}

class CriterioFechaAcontecimiento extends CriterioPertenencia {
     - desde: LocalDateTime
     - hasta: LocalDateTime
}

class CriterioCategoria extends CriterioPertenencia {
    - categoriaBuscada: String
}

class CriterioTitulo extends CriterioPertenencia {
    - tituloBuscado: String
}

abstract Fuente {
    # listaHechos: List<Hecho>
    + getListaHechos()
}

class FuenteEstatica extends Fuente {
    + importarHechos(lector, ruta)
}

class FuenteDinamica extends Fuente {
    + solicitudesEliminacion: List<SolicitudEliminacion>
}

class Hecho {
    - titulo: String
    - descripcion: String
    - categoría: String
    - coordenadas: Coordenadas
    - fechaAcontecimiento: LocalDateTime
    - fechaCarga: LocalDateTime
    - origen: Origen
    - multimedia: Multimedia
    + printHecho(): String
}

class Multimedia {
    - url: String
    - tipo: String
    - formato: String
    - tamaño: Long
    - fechaSubida: LocalDateTime
}

enum Origen {
    cargaManual
    dataset
    contribuyente
}

class Coordenadas {
    - latitud: Float
    - longitud: Float
}


class SolicitudEliminacion {
    - hecho: Hecho
    - causa: String /'debe ser máximo 500 caracteres'/
    + consultarSolicitud(): String
}

enum Estado {
    pendiente
    aceptada
    rechazada
}

abstract class Visitante {
}

class Administrador extends Visitante {
    - nombre: String
    + revisarSolicitudes(fuente: FuenteDinamica)
    - decidirAceptar()
}

class Contribuyente extends Visitante {
    + nombre: String
    + apellido: String
    + edad: Integer
}

class LectorCSV {
    + obtenerHechos(ruta: String): List<Hecho>
    + splitCSV(linea: String): List<String>
    + existeHechoConMismoTitulo(hecho: Hecho, hechos: List<Hecho>): Boolean
    - parsearHecho(linea: String): Hecho
}

Hecho -- Origen
Hecho -- Coordenadas
Hecho -- Multimedia
Coleccion -- Fuente
Coleccion -- CriterioPertenencia
FuenteDinamica -- SolicitudEliminacion

@enduml