@startuml
top to bottom direction
skinparam linetype ortho

class Coleccion {
  - handle: String
  - algoritmoDeConsenso: EstrategiaConsenso
  - hechosConsensuados: List<Hecho>
  - criterios: List<Filtro>
  - descripcion: String
  - fuentes: List<Fuente>
  - titulo: String
  - hechos: List<Hecho>
  + actualizarColeccion(): void
  + actualizarCurados(): void
  + agregarFuente(Fuente): void
  + agregarCriterio(Filtro): void
  + eliminarFuente(Fuente): void
  + navegar(List<Filtro>, Boolean): List<Hecho>
}
interface EstrategiaConsenso {
  + cumple(Hecho, List<Fuente>): boolean
}
class ConsensoAbsoluto implements EstrategiaConsenso {
  + cumple(Hecho, List<Fuente>): boolean
}
class ConsensoPorMayoriaSimple implements EstrategiaConsenso {
  + cumple(Hecho, List<Fuente>): boolean
}
class ConsensoPorMultiplesMenciones implements EstrategiaConsenso {
  + cumple(Hecho, List<Fuente>): boolean
  - sonIguales(Hecho, Hecho): boolean
}
class ConsensoTrue implements EstrategiaConsenso {
  + cumple(Hecho, List<Fuente>): boolean
}
class Contribuyente {
  - esAnonimo: boolean
  - nombre: String
  - apellido: String
  - edad: int
  + toString(): String
}
enum Estado {
  + RECHAZADA
  + PENDIENTE
  + ACEPTADA
}
interface Filtro {
  + cumple(Hecho): boolean
}
class FiltroCategoria implements Filtro {
  - categoriaBuscada: String
  + cumple(Hecho): boolean
}
class FiltroContribuyente implements Filtro {
  - debeTenerContribuyente: boolean
  + cumple(Hecho): boolean
}
class FiltroFechaAcontecimiento implements Filtro {
  - hasta: LocalDateTime
  - desde: LocalDateTime
  + cumple(Hecho): boolean
}
class FiltroFechaCarga implements Filtro {
  - hasta: LocalDateTime
  - desde: LocalDateTime
  + cumple(Hecho): boolean
}
class FiltroMultimedia implements Filtro {
  - debeTenerMultimedia: boolean
  + cumple(Hecho): boolean
}
class FiltroTitulo implements Filtro {
  - tituloBuscado: String
  + cumple(Hecho): boolean
}
class FiltroUbicacion implements Filtro {
  - latitud: Float
  - longitud: Float
  + cumple(Hecho): boolean
  + fromString(String): FiltroUbicacion
}
abstract class Fuente {
  ~ id: Long
  + getHechoFromId(Long): Hecho
  + getHechos(): List<Hecho>
}
class FuenteDinamica extends Fuente {
  # hechos: List<Hecho>
  + agregarHecho(Hecho): void
  + buscarHechoPorTitulo(String): Hecho
  + etiquetarPorTitulo(String, String): void
  + agregarHechos(List<Hecho>): void
}
class FuenteEstatica extends Fuente {
  # hechos: List<Hecho>
  + importarHechos(String): void
}
class FuenteProxy extends Fuente {
  - webClient: WebClient
}
class Hecho {
  - fechaAcontecimiento: LocalDateTime
  - id: Long
  - etiquetas: List<String>
  - limiteDiasEdicion: Long
  - contribuyente: Contribuyente
  - estado: Estado
  - longitud: Double
  - descripcion: String
  - titulo: String
  - origen: Origen
  - fechaCarga: LocalDateTime
  - multimedia: Multimedia
  - eliminado: Boolean
  - categoria: String
  - latitud: Double
  + rechazar(): void
  + eliminar(): void
  + agregarEtiqueta(String): Hecho
  + actualizarHecho(Hecho): void
  + aceptar(): void
  + esEditable(): boolean
}
class LectorCSV {
  + leer(String): List<Hecho>
}
class ListaDeFiltros {
  - criterios: List<Filtro>
  - parseFecha(String): LocalDateTime
  + getCriterios(): List<Filtro>
  + getListFromParams(String, String, String, String, String, String, Boolean, Boolean): List<Filtro>
}
class Multimedia {
  - url: String
  - baseUrl: String
}
enum Origen {
  + CONTRIBUYENTE
  + DATASET
  + PROXY
}
class SolicitudEliminacion {
  - estado: Estado
  - id: Long
  - hecho: Hecho
  - causa: String
  + rechazarSolicitud(): void
  + aceptarSolicitud(): void
}
enum TipoAlgoritmo {
  + MAYORIA_ABSOLUTA
  + MULTIPLES_MENCIONES
  + MAYORIA_SIMPLE
  + getConsenso(): EstrategiaConsenso
}

Coleccion                      ..>  ConsensoTrue
Coleccion                     "1" *--> "algoritmoDeConsenso\n1" EstrategiaConsenso
Coleccion                     "1" *--> "criterios\n*" Filtro
Coleccion                     "1" *--> "fuentes\n*" Fuente
Coleccion                     "1" *--> "hechos\n*" Hecho
FuenteDinamica                "1" *--> "hechos\n*" Hecho
FuenteEstatica                "1" *--> "hechos\n*" Hecho
FuenteEstatica                 ..>  LectorCSV
Hecho                         "1" *--> "contribuyente\n1" Contribuyente
Hecho                         "1" *--> "estado\n1" Estado
Hecho                         "1" *--> "multimedia\n1" Multimedia
Hecho                         "1" *--> "origen\n1" Origen
ListaDeFiltros                "1" *--> "criterios\n*" Filtro
ListaDeFiltros                 ..>  FiltroCategoria
ListaDeFiltros                 ..>  FiltroContribuyente
ListaDeFiltros                 ..>  FiltroFechaAcontecimiento
ListaDeFiltros                 ..>  FiltroFechaCarga
ListaDeFiltros                 ..>  FiltroMultimedia
SolicitudEliminacion          "1" *--> "estado\n1" Estado
SolicitudEliminacion          "1" *--> "hecho\n1" Hecho
TipoAlgoritmo                  ..>  ConsensoAbsoluto
TipoAlgoritmo                  ..>  ConsensoPorMayoriaSimple
TipoAlgoritmo                  ..>  ConsensoPorMultiplesMenciones
@enduml